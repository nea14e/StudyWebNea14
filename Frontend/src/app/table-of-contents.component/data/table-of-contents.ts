export const tableOfContents: TableOfContentsItem[] = [
  {
    id: 'test-group-1',
    title: 'Тестовая группа №1',
    description: `<p>Эта группа предназначена для тестирования вложенных групп.
        Нажмите на стрелку, чтобы раскрыть/свернуть её.</p>`,
    childes: [
      {
        id: 'test-subgroup-1-1',
        title: 'Тестовая подгруппа №1-1',
        description: `<p>Это подгруппа, предназначенная для тестирования вложенных групп.
            Она вложена в первую тестовую группу.</p>`,
        childes: [
          {
            id: 'test-subsubgroup-1-1-1',
            title: 'Тестовая подподгруппа №1-1-1',
            description: `<p>Это первая подподгруппа, предназначенная для тестирования вложенных групп.
            Она вложена в тестовую подгруппу 1-1.</p>`
          },
          {
            id: 'test-subsubgroup-1-1-2',
            title: 'Тестовая подподгруппа №1-1-2',
            description: `<p>Это вторая подподгруппа, предназначенная для тестирования вложенных групп.
            Она вложена в тестовую подгруппу 1-1.</p>`
          }
        ]
      },
      {
        id: 'test-subgroup-1-2',
        title: 'Тестовая подгруппа №1-2',
        description: `<p>Это ещё одна подгруппа, предназначенная для тестирования вложенных групп.
            Она вложена в первую тестовую группу.</p>`
      }
    ]
  },
  {
    id: 'test-group-2',
    title: 'Тестовая группа №2',
    description: `<p>Это вторая группа, предназначенная для тестирования вложенных групп.
        Нажмите на стрелку, чтобы раскрыть/свернуть её.</p>`,
    childes: [
      {
        id: 'test-subgroup-2-1',
        title: 'Тестовая подгруппа №2-1',
        description: `<p>Это подгруппа второй группы, предназначенная для тестирования вложенных групп.</p>`
      }
    ]
  },
  {
    id: 'simple-request',
    path: '/simple-request',
    title: 'Простой запрос',
    description: `<p>Самый простой пример запроса на бэкенд.
    Только одна кнопка и текст, который приходит по нажатию на кнопку.</p>
    <p>Запрос посылается из компонента на фронте и обрабатывается в API-контроллере на бэкенде.
    Для простоты сервисы не используются.</p>`
  },
  {
    id: 'simple-request-2',
    path: '/simple-request-2',
    title: 'Простой запрос-2',
    description: `Пример запроса на бэкенд с использованием сервисов.
    По нажатию на кнопку из HTML вызывается компонент, а компонент вызывает сервис, который делает сетевой запрос.
    Сетевые запросы на фронте должны быть вынесены в сервисы, потому что они занимают много времени.
    Также и на бэкенде все вычисления выносятся в сервисы: ApiController не сам обрабатывает запрос,
    а вызывает для этого Service бэкенда.
    `
  },
  {
    id: 'request-with-parameters',
    path: '/request-with-parameters',
    title: 'Запросы с параметрами',
    description: `Примеры запросов с параметрами:
     <ul>
        <li>в адресе запроса;</li>
        <li>в адресе запроса после "?" (query-параметры);</li>
        <li>передача сложных данных в query-параметрах;</li>
        <li>передача и получение сложных данных в теле POST-запроса.</li>
     </ul>`
  },
  {
    id: 'weather-forecast',
    path: '/weather-forecast',
    title: 'Прогноз погоды',
    description: `Пример запроса на бэкенд.
     <br/>Задания:
     <ul>
        <li>улучшить отображение данных;</li>
        <li>изменить алгоритм генерации на бэкенде.</li>
     </ul>`
  },
  {
    id: 'request-errors-example',
    path: '/request-errors-example',
    title: 'Простые ошибки в запросах',
    description: `Пример содержит ошибки в запросах к бэкенду, такие как:
    <ul>
        <li>неправильный порт бекенда;</li>
        <li>неправильный адрес запроса;</li>
        <li>неправильный тип запроса;</li>
        <li>неизвестный параметр запроса;</li>
        <li>параметр запроса имеет другой тип;</li>
        <li>параметр запроса не может распарситься.</li>
    </ul>`
  },
  {
    id: 'crud-example',
    path: '/crud-example',
    title: 'Простой пример CRUD',
    description: `Простой пример CRUD (Create/Read/Update/Delete - Создать/Считать/Обновить/Удалить).
    Данные хранятся на бэкенде, пока он не завершится. Перезапуск бэкенда сбрасывает все изменения в данных.`
  },
  {
    id: 'json-constructor',
    path: '/json-constructor',
    title: 'Конструктор JSON',
    description: `Разберите, что представляет собой формат JSON, на этом примере.
    <br/>Также здесь вы найдёте рекурсивное использование компонента внутри самого себя.`
  }
];

export interface TableOfContentsItem {
  id: string;
  path?: string;
  title: string;
  description: string;
  childes?: TableOfContentsItem[];
  isExpanded?: boolean;
}
